{"version":3,"file":"ncstate-sat-popover.js","sources":["@ncstate/sat-popover/popover/popover.animations.ts","@ncstate/sat-popover/popover/types.ts","@ncstate/sat-popover/popover/popover.errors.ts","@ncstate/sat-popover/popover/popover-anchoring.service.ts","@ncstate/sat-popover/popover/popover.component.ts","@ncstate/sat-popover/popover/popover-hover.directive.ts","@ncstate/sat-popover/popover/popover.module.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  trigger,\n  state,\n  style,\n  animate,\n  transition,\n  AnimationTriggerMetadata\n} from '@angular/animations';\n\nexport const transformPopover: AnimationTriggerMetadata = trigger('transformPopover', [\n  transition(':enter', [\n    style({opacity: 0, transform: 'scale(0.3)'}),\n    animate('{{openTransition}}',\n      style({opacity: 1, transform: 'scale(1)'}))\n  ]),\n  transition(':leave', [\n    animate('{{closeTransition}}',\n      style({opacity: 0, transform: 'scale(0.5)'}))\n  ])\n]);\n","export type SatPopoverScrollStrategy = 'noop' | 'block' | 'reposition' | 'close';\nexport const VALID_SCROLL: SatPopoverScrollStrategy[] = [\n  'noop',\n  'block',\n  'reposition',\n  'close'\n];\n\nexport type SatPopoverHorizontalAlign = 'before' | 'start' | 'center' | 'end' | 'after';\nexport const VALID_HORIZ_ALIGN: SatPopoverHorizontalAlign[] = [\n  'before',\n  'start',\n  'center',\n  'end',\n  'after'\n];\n\nexport type SatPopoverVerticalAlign = 'above'  | 'start' | 'center' | 'end' | 'below';\nexport const VALID_VERT_ALIGN: SatPopoverVerticalAlign[] = [\n  'above',\n  'start',\n  'center',\n  'end',\n  'below'\n];\n\nexport interface SatPopoverOpenOptions {\n  /**\n   * Whether the popover should return focus to the previously focused element after\n   * closing. Defaults to true.\n   */\n  restoreFocus?: boolean;\n\n  /** Whether the first focusable element should be focused on open. Defaults to true. */\n  autoFocus?: boolean;\n}\n","import { VALID_HORIZ_ALIGN, VALID_VERT_ALIGN, VALID_SCROLL } from './types';\n\nexport function getUnanchoredPopoverError(): Error {\n  return Error('SatPopover does not have an anchor.');\n}\n\nexport function getInvalidPopoverAnchorError(): Error {\n  return Error('SatPopover#anchor must be an instance of SatPopoverAnchor, ElementRef, or HTMLElement.');\n}\n\nexport function getInvalidPopoverError(): Error {\n  return Error('SatPopoverAnchor#satPopoverAnchor must be an instance of SatPopover.');\n}\n\nexport function getInvalidSatPopoverAnchorError(): Error {\n  return Error(\n    `SatPopoverAnchor must be associated with a ` +\n      `SatPopover component. ` +\n      `Examples: <sat-popover [anchor]=\"satPopoverAnchorTemplateRef\"> or ` +\n      `<button satPopoverAnchor [satPopoverAnchor]=\"satPopoverTemplateRef\">`\n  );\n}\n\nexport function getInvalidHorizontalAlignError(alignment): Error {\n  return Error(generateGenericError('horizontalAlign/xAlign', alignment, VALID_HORIZ_ALIGN));\n}\n\nexport function getInvalidVerticalAlignError(alignment): Error {\n  return Error(generateGenericError('verticalAlign/yAlign', alignment, VALID_VERT_ALIGN));\n}\n\nexport function getInvalidScrollStrategyError(strategy): Error {\n  return Error(generateGenericError('scrollStrategy', strategy, VALID_SCROLL));\n}\n\nfunction generateGenericError(apiName: string, invalid: any, valid: string[]): string {\n  return `Invalid ${apiName}: '${invalid}'. Valid options are ${valid.map(v => `'${v}'`).join(', ')}.`;\n}\n","import {\n  ElementRef,\n  Injectable,\n  NgZone,\n  OnDestroy,\n  Optional,\n  ViewContainerRef\n} from '@angular/core';\nimport {\n  ConnectionPositionPair,\n  FlexibleConnectedPositionStrategy,\n  HorizontalConnectionPos,\n  Overlay,\n  OverlayConfig,\n  OverlayRef,\n  ScrollStrategy,\n  VerticalConnectionPos,\n} from '@angular/cdk/overlay';\nimport { Directionality, Direction} from '@angular/cdk/bidi';\nimport { ESCAPE } from '@angular/cdk/keycodes';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { Subscription, Subject } from 'rxjs';\nimport { takeUntil, take, filter, tap } from 'rxjs/operators';\n\nimport { SatPopover } from './popover.component';\nimport {\n  SatPopoverHorizontalAlign,\n  SatPopoverVerticalAlign,\n  SatPopoverScrollStrategy,\n  SatPopoverOpenOptions,\n} from './types';\n\n/**\n * Configuration provided by the popover for the anchoring service\n * to build the correct overlay config.\n */\ninterface PopoverConfig {\n  horizontalAlign: SatPopoverHorizontalAlign;\n  verticalAlign: SatPopoverVerticalAlign;\n  hasBackdrop: boolean;\n  backdropClass: string;\n  scrollStrategy: SatPopoverScrollStrategy;\n  forceAlignment: boolean;\n  lockAlignment: boolean;\n}\n\n@Injectable()\nexport class SatPopoverAnchoringService implements OnDestroy {\n\n  /** Emits when the popover is opened. */\n  popoverOpened = new Subject<void>();\n\n  /** Emits when the popover is closed. */\n  popoverClosed = new Subject<void>();\n\n  /** Reference to the overlay containing the popover component. */\n  _overlayRef: OverlayRef;\n\n  /** Reference to the target popover. */\n  private _popover: SatPopover;\n\n  /** Reference to the view container for the popover template. */\n  private _viewContainerRef: ViewContainerRef;\n\n  /** Reference to the anchor element. */\n  private _anchor: HTMLElement;\n\n  /** Reference to a template portal where the overlay will be attached. */\n  private _portal: TemplatePortal<any>;\n\n  /** Single subscription to notifications service events. */\n  private _notificationsSubscription: Subscription;\n\n  /** Single subscription to position changes. */\n  private _positionChangeSubscription: Subscription;\n\n  /** Whether the popover is presently open. */\n  private _popoverOpen = false;\n\n  /** Emits when the service is destroyed. */\n  private _onDestroy = new Subject<void>();\n\n  constructor(\n    private _overlay: Overlay,\n    private _ngZone: NgZone,\n    @Optional() private _dir: Directionality\n  ) { }\n\n  ngOnDestroy() {\n    // Destroy popover before terminating subscriptions so that any resulting\n    // detachments update 'closed state'\n    this._destroyPopover();\n\n    // Terminate subscriptions\n    if (this._notificationsSubscription) {\n      this._notificationsSubscription.unsubscribe();\n    }\n    if (this._positionChangeSubscription) {\n      this._positionChangeSubscription.unsubscribe();\n    }\n    this._onDestroy.next();\n    this._onDestroy.complete();\n\n    this.popoverOpened.complete();\n    this.popoverClosed.complete();\n  }\n\n  /** Anchor a popover instance to a view and connection element. */\n  anchor(\n    popover: SatPopover,\n    viewContainerRef: ViewContainerRef,\n    anchor: ElementRef | HTMLElement\n  ): void {\n    // If we're just changing the anchor element and the overlayRef already exists,\n    // simply update the existing _overlayRef's anchor.\n    if (\n      this._popover === popover &&\n      this._viewContainerRef === viewContainerRef &&\n      this._overlayRef\n    ) {\n      this._anchor = anchor instanceof ElementRef\n        ? anchor.nativeElement\n        : anchor;\n      const config = this._overlayRef.getConfig();\n      const strategy = config.positionStrategy as FlexibleConnectedPositionStrategy;\n      strategy.setOrigin(this._anchor);\n      this._overlayRef.updatePosition();\n      return;\n    }\n\n    // Destroy any previous popovers\n    this._destroyPopover();\n\n    // Assign local refs\n    this._popover = popover;\n    this._viewContainerRef = viewContainerRef;\n    this._anchor = anchor instanceof ElementRef\n      ? anchor.nativeElement\n      : anchor;\n  }\n\n  /** Gets whether the popover is presently open. */\n  isPopoverOpen(): boolean {\n    return this._popoverOpen;\n  }\n\n  /** Toggles the popover between the open and closed states. */\n  togglePopover(): void {\n    return this._popoverOpen ? this.closePopover() : this.openPopover();\n  }\n\n  /** Opens the popover. */\n  openPopover(options: SatPopoverOpenOptions = {}): void {\n    if (!this._popoverOpen) {\n      this._applyOpenOptions(options);\n      this._createOverlay();\n      this._subscribeToBackdrop();\n      this._subscribeToEscape();\n      this._subscribeToDetachments();\n      this._saveOpenedState();\n    }\n  }\n\n  /** Closes the popover. */\n  closePopover(value?: any): void {\n    if (this._overlayRef) {\n      this._saveClosedState(value);\n      this._overlayRef.detach();\n    }\n  }\n\n  /** TODO: implement when the overlay's position can be dynamically changed */\n  repositionPopover(): void {\n    this.updatePopoverConfig();\n  }\n\n  /** TODO: when the overlay's position can be dynamically changed, do not destroy */\n  updatePopoverConfig(): void {\n    this._destroyPopoverOnceClosed();\n  }\n\n  /** Realign the popover to the anchor. */\n  realignPopoverToAnchor(): void {\n    if (this._overlayRef) {\n      const config = this._overlayRef.getConfig();\n      const strategy = config.positionStrategy as FlexibleConnectedPositionStrategy;\n      strategy.reapplyLastPosition();\n    }\n  }\n\n  /** Get a reference to the anchor element. */\n  getAnchorElement(): HTMLElement {\n    return this._anchor;\n  }\n\n  /** Apply behavior properties on the popover based on the open options. */\n  private _applyOpenOptions(options: SatPopoverOpenOptions): void {\n    // Only override restoreFocus as `false` if the option is explicitly `false`\n    const restoreFocus = options.restoreFocus !== false;\n    this._popover._restoreFocusOverride = restoreFocus;\n\n    // Only override autoFocus as `false` if the option is explicitly `false`\n    const autoFocus = options.autoFocus !== false;\n    this._popover._autoFocusOverride = autoFocus;\n  }\n\n  /** Create an overlay to be attached to the portal. */\n  private _createOverlay(): OverlayRef {\n    // Create overlay if it doesn't yet exist\n    if (!this._overlayRef) {\n      this._portal = new TemplatePortal(this._popover._templateRef, this._viewContainerRef);\n\n      const popoverConfig = {\n        horizontalAlign: this._popover.horizontalAlign,\n        verticalAlign: this._popover.verticalAlign,\n        hasBackdrop: this._popover.hasBackdrop,\n        backdropClass: this._popover.backdropClass,\n        scrollStrategy: this._popover.scrollStrategy,\n        forceAlignment: this._popover.forceAlignment,\n        lockAlignment: this._popover.lockAlignment,\n      };\n\n      const overlayConfig = this._getOverlayConfig(popoverConfig, this._anchor);\n\n      this._subscribeToPositionChanges(\n        overlayConfig.positionStrategy as FlexibleConnectedPositionStrategy\n      );\n\n      this._overlayRef = this._overlay.create(overlayConfig);\n    }\n\n    // Actually open the popover\n    this._overlayRef.attach(this._portal);\n    return this._overlayRef;\n  }\n\n\n  /** Removes the popover from the DOM. Does NOT update open state. */\n  private _destroyPopover(): void {\n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n      this._overlayRef = null;\n    }\n  }\n\n  /**\n   * Destroys the popover immediately if it is closed, or waits until it\n   * has been closed to destroy it.\n   */\n  private _destroyPopoverOnceClosed(): void {\n    if (this.isPopoverOpen() && this._overlayRef) {\n      this._overlayRef.detachments().pipe(\n        take(1),\n        takeUntil(this._onDestroy)\n      ).subscribe(() => this._destroyPopover());\n    } else {\n      this._destroyPopover();\n    }\n  }\n\n  /** Close popover when backdrop is clicked. */\n  private _subscribeToBackdrop(): void {\n    this._overlayRef\n      .backdropClick()\n      .pipe(\n        tap(() => this._popover.backdropClicked.emit()),\n        filter(() => this._popover.interactiveClose),\n        takeUntil(this.popoverClosed),\n        takeUntil(this._onDestroy),\n      )\n      .subscribe(() => this.closePopover());\n  }\n\n  /** Close popover when escape keydown event occurs. */\n  private _subscribeToEscape(): void {\n    this._overlayRef\n      .keydownEvents()\n      .pipe(\n        tap(event => this._popover.overlayKeydown.emit(event)),\n        filter(event => event.keyCode === ESCAPE),\n        filter(() => this._popover.interactiveClose),\n        takeUntil(this.popoverClosed),\n        takeUntil(this._onDestroy),\n      )\n      .subscribe(() => this.closePopover());\n  }\n\n  /** Set state back to closed when detached. */\n  private _subscribeToDetachments(): void {\n    this._overlayRef\n      .detachments()\n      .pipe(takeUntil(this._onDestroy))\n      .subscribe(() => this._saveClosedState());\n  }\n\n  /** Save the opened state of the popover and emit. */\n  private _saveOpenedState(): void {\n    if (!this._popoverOpen) {\n      this._popover._open = this._popoverOpen = true;\n\n      this.popoverOpened.next();\n      this._popover.opened.emit();\n    }\n  }\n\n  /** Save the closed state of the popover and emit. */\n  private _saveClosedState(value?: any): void {\n    if (this._popoverOpen) {\n      this._popover._open = this._popoverOpen = false;\n\n      this.popoverClosed.next(value);\n      this._popover.closed.emit(value);\n    }\n  }\n\n  /** Gets the text direction of the containing app. */\n  private _getDirection(): Direction {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n\n  /** Create and return a config for creating the overlay. */\n  private _getOverlayConfig(config: PopoverConfig, anchor: HTMLElement): OverlayConfig {\n    return new OverlayConfig({\n      positionStrategy: this._getPositionStrategy(\n        config.horizontalAlign,\n        config.verticalAlign,\n        config.forceAlignment,\n        config.lockAlignment,\n        anchor,\n      ),\n      hasBackdrop: config.hasBackdrop,\n      backdropClass: config.backdropClass || 'cdk-overlay-transparent-backdrop',\n      scrollStrategy: this._getScrollStrategyInstance(config.scrollStrategy),\n      direction: this._getDirection(),\n    });\n  }\n\n  /**\n   * Listen to changes in the position of the overlay and set the correct alignment classes,\n   * ensuring that the animation origin is correct, even with a fallback position.\n   */\n  private _subscribeToPositionChanges(position: FlexibleConnectedPositionStrategy): void {\n    if (this._positionChangeSubscription) {\n      this._positionChangeSubscription.unsubscribe();\n    }\n\n    this._positionChangeSubscription = position.positionChanges\n      .pipe(takeUntil(this._onDestroy))\n      .subscribe(change => {\n        // Position changes may occur outside the Angular zone\n        this._ngZone.run(() => {\n          this._popover._setAlignmentClasses(\n            getHorizontalPopoverAlignment(change.connectionPair.overlayX),\n            getVerticalPopoverAlignment(change.connectionPair.overlayY),\n          );\n        });\n      });\n  }\n\n  /** Map a scroll strategy string type to an instance of a scroll strategy. */\n  private _getScrollStrategyInstance(strategy: SatPopoverScrollStrategy): ScrollStrategy {\n    switch (strategy) {\n      case 'block':\n        return this._overlay.scrollStrategies.block();\n      case 'reposition':\n        return this._overlay.scrollStrategies.reposition();\n      case 'close':\n        return this._overlay.scrollStrategies.close();\n      case 'noop':\n      default:\n        return this._overlay.scrollStrategies.noop();\n    }\n  }\n\n  /** Create and return a position strategy based on config provided to the component instance. */\n  private _getPositionStrategy(\n    horizontalTarget: SatPopoverHorizontalAlign,\n    verticalTarget: SatPopoverVerticalAlign,\n    forceAlignment: boolean,\n    lockAlignment: boolean,\n    anchor: HTMLElement,\n  ): FlexibleConnectedPositionStrategy {\n    // Attach the overlay at the preferred position\n    const targetPosition = getPosition(horizontalTarget, verticalTarget);\n    const positions = [targetPosition];\n\n    const strategy = this._overlay.position()\n      .flexibleConnectedTo(anchor)\n      .withFlexibleDimensions(false)\n      .withPush(false)\n      .withViewportMargin(0)\n      .withLockedPosition(lockAlignment);\n\n    // Unless the alignment is forced, add fallbacks based on the preferred positions\n    if (!forceAlignment) {\n      const fallbacks = this._getFallbacks(horizontalTarget, verticalTarget);\n      positions.push(...fallbacks);\n    }\n\n    return strategy.withPositions(positions);\n  }\n\n  /** Get fallback positions based around target alignments. */\n  private _getFallbacks(\n    hTarget: SatPopoverHorizontalAlign,\n    vTarget: SatPopoverVerticalAlign\n  ): ConnectionPositionPair[] {\n    // Determine if the target alignments overlap the anchor\n    const horizontalOverlapAllowed = hTarget !== 'before' && hTarget !== 'after';\n    const verticalOverlapAllowed = vTarget !== 'above' && vTarget !== 'below';\n\n    // If a target alignment doesn't cover the anchor, don't let any of the fallback alignments\n    // cover the anchor\n    const possibleHorizontalAlignments: SatPopoverHorizontalAlign[] =\n      horizontalOverlapAllowed ?\n        ['before', 'start', 'center', 'end', 'after'] :\n        ['before', 'after'];\n    const possibleVerticalAlignments: SatPopoverVerticalAlign[] =\n      verticalOverlapAllowed ?\n        ['above', 'start', 'center', 'end', 'below'] :\n        ['above', 'below'];\n\n    // Create fallbacks for each allowed prioritized fallback alignment combo\n    const fallbacks: ConnectionPositionPair[] = [];\n    prioritizeAroundTarget(hTarget, possibleHorizontalAlignments).forEach(h => {\n      prioritizeAroundTarget(vTarget, possibleVerticalAlignments).forEach(v => {\n        fallbacks.push(getPosition(h, v));\n      });\n    });\n\n    // Remove the first item since it will be the target alignment and isn't considered a fallback\n    return fallbacks.slice(1, fallbacks.length);\n  }\n\n}\n\n/** Helper function to get a cdk position pair from SatPopover alignments. */\nfunction getPosition(\n  h: SatPopoverHorizontalAlign,\n  v: SatPopoverVerticalAlign,\n): ConnectionPositionPair {\n  const {originX, overlayX} = getHorizontalConnectionPosPair(h);\n  const {originY, overlayY} = getVerticalConnectionPosPair(v);\n  return new ConnectionPositionPair({originX, originY}, {overlayX, overlayY});\n}\n\n/** Helper function to convert an overlay connection position to equivalent popover alignment. */\nfunction getHorizontalPopoverAlignment(h: HorizontalConnectionPos): SatPopoverHorizontalAlign {\n  if (h === 'start') {\n    return 'after';\n  }\n\n  if (h === 'end') {\n    return 'before';\n  }\n\n  return 'center';\n}\n\n/** Helper function to convert an overlay connection position to equivalent popover alignment. */\nfunction getVerticalPopoverAlignment(v: VerticalConnectionPos): SatPopoverVerticalAlign {\n  if (v === 'top') {\n    return 'below';\n  }\n\n  if (v === 'bottom') {\n    return 'above';\n  }\n\n  return 'center';\n}\n\n/** Helper function to convert alignment to origin/overlay position pair. */\nfunction getHorizontalConnectionPosPair(h: SatPopoverHorizontalAlign):\n    {originX: HorizontalConnectionPos, overlayX: HorizontalConnectionPos} {\n  switch (h) {\n    case 'before':\n      return {originX: 'start', overlayX: 'end'};\n    case 'start':\n      return {originX: 'start', overlayX: 'start'};\n    case 'end':\n      return {originX: 'end', overlayX: 'end'};\n    case 'after':\n      return {originX: 'end', overlayX: 'start'};\n    default:\n      return {originX: 'center', overlayX: 'center'};\n  }\n}\n\n/** Helper function to convert alignment to origin/overlay position pair. */\nfunction getVerticalConnectionPosPair(v: SatPopoverVerticalAlign):\n    {originY: VerticalConnectionPos, overlayY: VerticalConnectionPos} {\n  switch (v) {\n    case 'above':\n      return {originY: 'top', overlayY: 'bottom'};\n    case 'start':\n      return {originY: 'top', overlayY: 'top'};\n    case 'end':\n      return {originY: 'bottom', overlayY: 'bottom'};\n    case 'below':\n      return {originY: 'bottom', overlayY: 'top'};\n    default:\n      return {originY: 'center', overlayY: 'center'};\n  }\n}\n\n\n/**\n * Helper function that takes an ordered array options and returns a reorderded\n * array around the target item. e.g.:\n *\n * target: 3; options: [1, 2, 3, 4, 5, 6, 7];\n *\n * return: [3, 4, 2, 5, 1, 6, 7]\n */\nfunction prioritizeAroundTarget<T>(target: T, options: T[]): T[] {\n  const targetIndex = options.indexOf(target);\n\n  // Set the first item to be the target\n  const reordered = [target];\n\n  // Make left and right stacks where the highest priority item is last\n  const left = options.slice(0, targetIndex);\n  const right = options.slice(targetIndex + 1, options.length).reverse();\n\n  // Alternate between stacks until one is empty\n  while (left.length && right.length) {\n    reordered.push(right.pop());\n    reordered.push(left.pop());\n  }\n\n  // Flush out right side\n  while (right.length) {\n    reordered.push(right.pop());\n  }\n\n  // Flush out left side\n  while (left.length) {\n    reordered.push(left.pop());\n  }\n\n  return reordered;\n}\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  ViewChild,\n  ViewEncapsulation,\n  TemplateRef,\n  OnInit,\n  Optional,\n  Output,\n  Directive,\n  ViewContainerRef,\n  AfterViewInit\n} from '@angular/core';\nimport { AnimationEvent } from '@angular/animations';\nimport { DOCUMENT } from '@angular/common';\nimport { FocusTrap, FocusTrapFactory } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nimport { transformPopover } from './popover.animations';\nimport {\n  getUnanchoredPopoverError,\n  getInvalidHorizontalAlignError,\n  getInvalidVerticalAlignError,\n  getInvalidScrollStrategyError,\n  getInvalidPopoverAnchorError,\n  getInvalidSatPopoverAnchorError,\n  getInvalidPopoverError\n} from './popover.errors';\nimport {\n  SatPopoverScrollStrategy,\n  SatPopoverHorizontalAlign,\n  SatPopoverVerticalAlign,\n  VALID_SCROLL,\n  VALID_HORIZ_ALIGN,\n  VALID_VERT_ALIGN,\n  SatPopoverOpenOptions\n} from './types';\nimport { SatPopoverAnchoringService } from './popover-anchoring.service';\n\n// See http://cubic-bezier.com/#.25,.8,.25,1 for reference.\nconst DEFAULT_TRANSITION = '200ms cubic-bezier(0.25, 0.8, 0.25, 1)';\n\n@Directive({\n  selector: '[satPopoverAnchor]',\n  exportAs: 'satPopoverAnchor'\n})\nexport class SatPopoverAnchor implements AfterViewInit {\n  @Input('satPopoverAnchor')\n  get popover() {\n    return this._popover;\n  }\n  set popover(val: SatPopover) {\n    if (val instanceof SatPopover) {\n      val.anchor = this;\n    } else {\n      // when a directive is added with no arguments,\n      // angular assigns `''` as the argument\n      if (val !== '') {\n        throw getInvalidPopoverError();\n      }\n    }\n  }\n\n  /** @internal */\n  _popover: SatPopover;\n\n  constructor(public elementRef: ElementRef, public viewContainerRef: ViewContainerRef) {}\n\n  ngAfterViewInit() {\n    if (!this.popover) {\n      throw getInvalidSatPopoverAnchorError();\n    }\n  }\n}\n\n@Component({\n  selector: 'sat-popover',\n  encapsulation: ViewEncapsulation.None,\n  animations: [transformPopover],\n  styleUrls: ['./popover.component.scss'],\n  templateUrl: './popover.component.html',\n  providers: [SatPopoverAnchoringService]\n})\nexport class SatPopover implements OnInit {\n  /** Anchor element. */\n  @Input()\n  get anchor() {\n    return this._anchor;\n  }\n  set anchor(val: SatPopoverAnchor | ElementRef<HTMLElement> | HTMLElement) {\n    if (val instanceof SatPopoverAnchor) {\n      val._popover = this;\n      this._anchoringService.anchor(this, val.viewContainerRef, val.elementRef);\n      this._anchor = val;\n    } else if (val instanceof ElementRef || val instanceof HTMLElement) {\n      this._anchoringService.anchor(this, this._viewContainerRef, val);\n      this._anchor = val;\n    } else if (val) {\n      throw getInvalidPopoverAnchorError();\n    }\n  }\n  private _anchor: SatPopoverAnchor | ElementRef<HTMLElement> | HTMLElement;\n\n  /** Alignment of the popover on the horizontal axis. */\n  @Input()\n  get horizontalAlign() {\n    return this._horizontalAlign;\n  }\n  set horizontalAlign(val: SatPopoverHorizontalAlign) {\n    this._validateHorizontalAlign(val);\n    if (this._horizontalAlign !== val) {\n      this._horizontalAlign = val;\n      this._anchoringService.repositionPopover();\n    }\n  }\n  private _horizontalAlign: SatPopoverHorizontalAlign = 'center';\n\n  /** Alignment of the popover on the x axis. Alias for `horizontalAlign`. */\n  @Input()\n  get xAlign() {\n    return this.horizontalAlign;\n  }\n  set xAlign(val: SatPopoverHorizontalAlign) {\n    this.horizontalAlign = val;\n  }\n\n  /** Alignment of the popover on the vertical axis. */\n  @Input()\n  get verticalAlign() {\n    return this._verticalAlign;\n  }\n  set verticalAlign(val: SatPopoverVerticalAlign) {\n    this._validateVerticalAlign(val);\n    if (this._verticalAlign !== val) {\n      this._verticalAlign = val;\n      this._anchoringService.repositionPopover();\n    }\n  }\n  private _verticalAlign: SatPopoverVerticalAlign = 'center';\n\n  /** Alignment of the popover on the y axis. Alias for `verticalAlign`. */\n  @Input()\n  get yAlign() {\n    return this.verticalAlign;\n  }\n  set yAlign(val: SatPopoverVerticalAlign) {\n    this.verticalAlign = val;\n  }\n\n  /** Whether the popover always opens with the specified alignment. */\n  @Input()\n  get forceAlignment() {\n    return this._forceAlignment;\n  }\n  set forceAlignment(val: boolean) {\n    const coercedVal = coerceBooleanProperty(val);\n    if (this._forceAlignment !== coercedVal) {\n      this._forceAlignment = coercedVal;\n      this._anchoringService.repositionPopover();\n    }\n  }\n  private _forceAlignment = false;\n\n  /**\n   * Whether the popover's alignment is locked after opening. This prevents the popover\n   * from changing its alignement when scrolling or changing the size of the viewport.\n   */\n  @Input()\n  get lockAlignment() {\n    return this._lockAlignment;\n  }\n  set lockAlignment(val: boolean) {\n    const coercedVal = coerceBooleanProperty(val);\n    if (this._lockAlignment !== coercedVal) {\n      this._lockAlignment = coerceBooleanProperty(val);\n      this._anchoringService.repositionPopover();\n    }\n  }\n  private _lockAlignment = false;\n\n  /** Whether the first focusable element should be focused on open. */\n  @Input()\n  get autoFocus() {\n    return this._autoFocus && this._autoFocusOverride;\n  }\n  set autoFocus(val: boolean) {\n    this._autoFocus = coerceBooleanProperty(val);\n  }\n  private _autoFocus = true;\n  _autoFocusOverride = true;\n\n  /** Whether the popover should return focus to the previously focused element after closing. */\n  @Input()\n  get restoreFocus() {\n    return this._restoreFocus && this._restoreFocusOverride;\n  }\n  set restoreFocus(val: boolean) {\n    this._restoreFocus = coerceBooleanProperty(val);\n  }\n  private _restoreFocus = true;\n  _restoreFocusOverride = true;\n\n  /** How the popover should handle scrolling. */\n  @Input()\n  get scrollStrategy() {\n    return this._scrollStrategy;\n  }\n  set scrollStrategy(val: SatPopoverScrollStrategy) {\n    this._validateScrollStrategy(val);\n    if (this._scrollStrategy !== val) {\n      this._scrollStrategy = val;\n      this._anchoringService.updatePopoverConfig();\n    }\n  }\n  private _scrollStrategy: SatPopoverScrollStrategy = 'reposition';\n\n  /** Whether the popover should have a backdrop (includes closing on click). */\n  @Input()\n  get hasBackdrop() {\n    return this._hasBackdrop;\n  }\n  set hasBackdrop(val: boolean) {\n    this._hasBackdrop = coerceBooleanProperty(val);\n  }\n  private _hasBackdrop = false;\n\n  /** Whether the popover should close when the user clicks the backdrop or presses ESC. */\n  @Input()\n  get interactiveClose() {\n    return this._interactiveClose;\n  }\n  set interactiveClose(val: boolean) {\n    this._interactiveClose = coerceBooleanProperty(val);\n  }\n  private _interactiveClose = true;\n\n  /** Custom transition to use while opening. */\n  @Input()\n  get openTransition() {\n    return this._openTransition;\n  }\n  set openTransition(val: string) {\n    if (val) {\n      this._openTransition = val;\n    }\n  }\n  private _openTransition = DEFAULT_TRANSITION;\n\n  /** Custom transition to use while closing. */\n  @Input()\n  get closeTransition() {\n    return this._closeTransition;\n  }\n  set closeTransition(val: string) {\n    if (val) {\n      this._closeTransition = val;\n    }\n  }\n  private _closeTransition = DEFAULT_TRANSITION;\n\n  /** Optional backdrop class. */\n  @Input() backdropClass = '';\n\n  /** Emits when the popover is opened. */\n  @Output() opened = new EventEmitter<void>();\n\n  /** Emits when the popover is closed. */\n  @Output() closed = new EventEmitter<any>();\n\n  /** Emits when the popover has finished opening. */\n  @Output() afterOpen = new EventEmitter<void>();\n\n  /** Emits when the popover has finished closing. */\n  @Output() afterClose = new EventEmitter<void>();\n\n  /** Emits when the backdrop is clicked. */\n  @Output() backdropClicked = new EventEmitter<void>();\n\n  /** Emits when a keydown event is targeted to this popover's overlay. */\n  @Output() overlayKeydown = new EventEmitter<KeyboardEvent>();\n\n  /** Reference to template so it can be placed within a portal. */\n  @ViewChild(TemplateRef, { static: true }) _templateRef: TemplateRef<any>;\n\n  /** Classes to be added to the popover for setting the correct transform origin. */\n  _classList: any = {};\n\n  /** Whether the popover is presently open. */\n  _open = false;\n\n  /** @internal */\n  _anchoringService: SatPopoverAnchoringService;\n\n  /** Reference to the element to build a focus trap around. */\n  @ViewChild('focusTrapElement', { static: false })\n  private _focusTrapElement: ElementRef;\n\n  /** Reference to the element that was focused before opening. */\n  private _previouslyFocusedElement: HTMLElement;\n\n  /** Reference to a focus trap around the popover. */\n  private _focusTrap: FocusTrap;\n\n  constructor(\n    private _focusTrapFactory: FocusTrapFactory,\n    _anchoringService: SatPopoverAnchoringService,\n    private _viewContainerRef: ViewContainerRef,\n    @Optional() @Inject(DOCUMENT) private _document: any\n  ) {\n    // `@internal` stripping doesn't seem to work if the property is\n    // declared inside the constructor\n    this._anchoringService = _anchoringService;\n  }\n\n  ngOnInit() {\n    this._setAlignmentClasses();\n  }\n\n  /** Open this popover. */\n  open(options: SatPopoverOpenOptions = {}): void {\n    if (this._anchor) {\n      this._anchoringService.openPopover(options);\n      return;\n    }\n\n    throw getUnanchoredPopoverError();\n  }\n\n  /** Close this popover. */\n  close(value?: any): void {\n    this._anchoringService.closePopover(value);\n  }\n\n  /** Toggle this popover open or closed. */\n  toggle(): void {\n    this._anchoringService.togglePopover();\n  }\n\n  /** Realign the popover to the anchor. */\n  realign(): void {\n    this._anchoringService.realignPopoverToAnchor();\n  }\n\n  /** Gets whether the popover is presently open. */\n  isOpen(): boolean {\n    return this._open;\n  }\n\n  /** Allows programmatically setting a custom anchor. */\n  setCustomAnchor(viewContainer: ViewContainerRef, el: ElementRef<HTMLElement> | HTMLElement): void {\n    this._anchor = el;\n    this._anchoringService.anchor(this, viewContainer, el);\n  }\n\n  /** Gets an animation config with customized (or default) transition values. */\n  _getAnimation(): { value: any; params: any } {\n    return {\n      value: 'visible',\n      params: { openTransition: this.openTransition, closeTransition: this.closeTransition }\n    };\n  }\n\n  /** Callback for when the popover is finished animating in or out. */\n  _onAnimationDone(event: AnimationEvent) {\n    if (event.toState === 'visible') {\n      this._trapFocus();\n      this.afterOpen.emit();\n    } else if (event.toState === 'void') {\n      this._restoreFocusAndDestroyTrap();\n      this.afterClose.emit();\n    }\n  }\n\n  /** Apply alignment classes based on alignment inputs. */\n  _setAlignmentClasses(horizAlign = this.horizontalAlign, vertAlign = this.verticalAlign) {\n    this._classList['sat-popover-before'] = horizAlign === 'before' || horizAlign === 'end';\n    this._classList['sat-popover-after'] = horizAlign === 'after' || horizAlign === 'start';\n\n    this._classList['sat-popover-above'] = vertAlign === 'above' || vertAlign === 'end';\n    this._classList['sat-popover-below'] = vertAlign === 'below' || vertAlign === 'start';\n\n    this._classList['sat-popover-center'] = horizAlign === 'center' || vertAlign === 'center';\n  }\n\n  /** Move the focus inside the focus trap and remember where to return later. */\n  private _trapFocus(): void {\n    this._savePreviouslyFocusedElement();\n\n    // There won't be a focus trap element if the close animation starts before open finishes\n    if (!this._focusTrapElement) {\n      return;\n    }\n\n    if (!this._focusTrap && this._focusTrapElement) {\n      this._focusTrap = this._focusTrapFactory.create(this._focusTrapElement.nativeElement);\n    }\n\n    if (this.autoFocus) {\n      this._focusTrap.focusInitialElementWhenReady();\n    }\n  }\n\n  /** Restore focus to the element focused before the popover opened. Also destroy trap. */\n  private _restoreFocusAndDestroyTrap(): void {\n    const toFocus = this._previouslyFocusedElement;\n\n    // Must check active element is focusable for IE sake\n    if (toFocus && 'focus' in toFocus && this.restoreFocus) {\n      this._previouslyFocusedElement.focus();\n    }\n\n    this._previouslyFocusedElement = null;\n\n    if (this._focusTrap) {\n      this._focusTrap.destroy();\n      this._focusTrap = undefined;\n    }\n  }\n\n  /** Save a reference to the element focused before the popover was opened. */\n  private _savePreviouslyFocusedElement(): void {\n    if (this._document) {\n      this._previouslyFocusedElement = this._document.activeElement as HTMLElement;\n    }\n  }\n\n  /** Throws an error if the alignment is not a valid horizontalAlign. */\n  private _validateHorizontalAlign(pos: SatPopoverHorizontalAlign): void {\n    if (VALID_HORIZ_ALIGN.indexOf(pos) === -1) {\n      throw getInvalidHorizontalAlignError(pos);\n    }\n  }\n\n  /** Throws an error if the alignment is not a valid verticalAlign. */\n  private _validateVerticalAlign(pos: SatPopoverVerticalAlign): void {\n    if (VALID_VERT_ALIGN.indexOf(pos) === -1) {\n      throw getInvalidVerticalAlignError(pos);\n    }\n  }\n\n  /** Throws an error if the scroll strategy is not a valid strategy. */\n  private _validateScrollStrategy(strategy: SatPopoverScrollStrategy): void {\n    if (VALID_SCROLL.indexOf(strategy) === -1) {\n      throw getInvalidScrollStrategyError(strategy);\n    }\n  }\n}\n","import { AfterViewInit, Directive, HostListener, Input, OnDestroy } from '@angular/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { of, Subject } from 'rxjs';\nimport { delay, switchMap, takeUntil } from 'rxjs/operators';\n\nimport { SatPopoverAnchor } from './popover.component';\n\n@Directive({\n  selector: '[satPopoverHover]'\n})\nexport class SatPopoverHoverDirective implements AfterViewInit, OnDestroy {\n  /**\n   * Amount of time to delay (ms) after hovering starts before\n   * the popover opens. Defaults to 0ms.\n   */\n  @Input()\n  get satPopoverHover() { return this._satPopoverHover; }\n  set satPopoverHover(val: number) {\n    this._satPopoverHover = coerceNumberProperty(val);\n  }\n  private _satPopoverHover = 0;\n\n  /** Emits when the directive is destroyed. */\n  private _onDestroy = new Subject();\n\n  /** Emits when the user's mouse enters the element. */\n  private _onMouseEnter = new Subject<void>();\n\n  /** Emits when the user's mouse leaves the element. */\n  private _onMouseLeave = new Subject<void>();\n\n  constructor(public anchor: SatPopoverAnchor) { }\n\n  ngAfterViewInit() {\n    // Whenever the user hovers this host element, delay the configured\n    // amount of time and open the popover. Terminate if the mouse leaves\n    // the host element before the delay is complete.\n    this._onMouseEnter\n      .pipe(\n        switchMap(() => {\n          return of(null).pipe(\n            delay(this._satPopoverHover || 0),\n            takeUntil(this._onMouseLeave),\n          );\n        }),\n        takeUntil(this._onDestroy),\n      )\n      .subscribe(() => this.anchor.popover.open());\n  }\n\n  ngOnDestroy() {\n    this._onDestroy.next();\n    this._onDestroy.complete();\n  }\n\n  @HostListener('mouseenter')\n  showPopover() {\n    this._onMouseEnter.next();\n  }\n\n  @HostListener('mouseleave')\n  closePopover() {\n    this._onMouseLeave.next();\n    this.anchor.popover.close();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { BidiModule } from '@angular/cdk/bidi';\n\nimport { SatPopover, SatPopoverAnchor } from './popover.component';\nimport { SatPopoverHoverDirective } from './popover-hover.directive';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OverlayModule,\n    A11yModule,\n    BidiModule,\n  ],\n  declarations: [\n    SatPopover,\n    SatPopoverAnchor,\n    SatPopoverHoverDirective,\n  ],\n  exports: [\n    SatPopover,\n    SatPopoverAnchor,\n    SatPopoverHoverDirective,\n    BidiModule,\n  ]\n})\nexport class SatPopoverModule { }\n"]}